class DModifier {
    constructor() {
        this.token = null;
        this.user = {};
    }

    addHook(callback) {
        this.id = Math.random().toString(36);
        window.webpackChunkdiscord_app.push([[this.id], {}, function(req) {
            let keyed = Object.keys(req.c).map(function(key) {
                if (req.c[key].exports) {
                    return req.c[key].exports
                }
            }).filter(function(e) {
                return e
            })

            callback.call(this, keyed)
        }])
    }

}

let Modifier = new DModifier();

Modifier.addHook(function(keyed) {
    keyed.find(function(key) {
        let def = key.default

        if (!def) return

        if (def.getToken !== undefined) {
            Modifier.token = def.getToken()
        }

        if (def.getCurrentUser !== undefined) {
            Object.assign(Modifier.user, def.getCurrentUser())
        }
    })
})

// testing

Modifier.addHook(function(keyed) {
    keyed.find(function(key) {
        let def = key.default

        if (!def) return

        let text = def.toString()
        if (text.toLowerCase().includes("message")) {
            console.log("Found message")
            console.log(def.toString())
            console.log(def)
        }
    })
})

class DiscordUtils {
    constructor() {
        this.webPackExports = {};
        this.getWebPackExports();
        console.log(this.webPackExports);
        this.idsgenerated = [];
    }

    getWebPackExports() {
        if (window.webpackChunkdiscord_app !== null) {
            window.webpackChunkdiscord_app.push([
                [`__$${this.genId()}__`],
                {},
                (req) => {
                    this.webPackExports = req;
                    ids.length = 0;
                }
            ]);
        } else return !true;
    }

    genId() {
        let id = Math.random().toString(36).substring(2, 15);
        if (this.idsgenerated.includes(id)) {
            this.genId();
        } else {
            this.idsgenerated.push(id);
            return id;
        }
    }
}

let Discord = new DiscordUtils();